# Only retain the 8 main sites:
# Pelican Ghut, Grand Ghut, Crab Cove, Muskmelon, Bigelow, White Bay, Monkey Point, and Guana Head
sponge_raw$Site <- as.character(sponge_raw$Site)
sponge_raw <- sponge_raw[sponge_raw$Site == "Muskmelon" | sponge_raw$Site == "Pelican Ghut" | sponge_raw$Site == "Crab Cove" |
sponge_raw$Site == "Bigelow" | sponge_raw$Site == "Monkey Pt" | sponge_raw$Site == "Guana Head" |
sponge_raw$Site == "White Bay" | sponge_raw$Site == "Grand Ghut", ]
sponge_raw$Site <- as.factor(sponge_raw$Site)
# Put datast into long form (i.e. so species codes are in a single column rather than having one column for each species code)
# key = "title of new column", value = "numbers being moved around because of the key",
# ":" specifies which columns should be included in key
sponge_raw_longform <- sponge_raw %>%
gather(key = "Taxonomic_Group", value = "Count", Agelas.clathrodes..Agelas.citrina.or.Clathria.faviformis:Black..spiny..purple.exudate.but.not.slimy)
# Double-check
summary(sponge_raw_longform)
# Taxonomic_Group is being read as a character, but it should be a factor
# overwrite column so it is a factor
sponge_raw_longform$Taxonomic_Group <- as.factor(sponge_raw_longform$Taxonomic_Group)
# Summary Information
str(sponge_raw_longform)
summary(sponge_raw_longform)
summary(sponge_raw_longform$Site)
summary(sponge_raw_longform$Year)
sponge_raw_longform$Year <- as.factor(sponge_raw_longform$Year)
str(sponge_raw_longform)
summary(sponge_raw_longform)
summary(sponge_raw_longform$Site)
summary(sponge_raw_longform$Year)
fish_codes <- read.csv("fish species codes 2018.csv", header = T)
fish_list <- read.csv("Fish species list.csv", header = T)
fish_raw <- read.csv("raw fish data nicole 2018.csv", header = T)
View(fish_codes)
View(fish_list)
View(fish_raw)
fish_raw_30ft_main <- fish_raw_long_split_codes_list[which(fish_raw_long_split_codes_list$depth == '30'
& fish_raw_long_split_codes_list$survey == 'main'), ]
fish_raw_30ft_main <- fish_raw[which(fish_raw$depth == '30' & fish_raw$survey == 'main'), ]
View(fish_raw_30ft_main)
summary(fish_raw_30ft_main$depth)
summary(fish_raw_30ft_main$survey)
summary(fish_raw_30ft_main$Site)
View(fish_raw$site)
Summary(fish_raw$site)
fish_raw <- read.csv("raw fish data nicole 2018.csv", header = T)
Summary(fish_raw$site)
View(fish_raw)
Str(fish_raw$site)
str(fish_raw$site)
View(fish_raw)
Summary(fish_raw$site)
summary(fish_raw$site)
summary(fish_raw$site)
fish_raw$site <- revalue(fish_raw$site, c("bigelow" = "Bigelow", "crab" = "Crab Cove", "grand" = "Grand Ghut",
"iguana" = "Guana Head", "monkey" = "Monkey Pt", "muskN" = "Muskmelon",
"pelican" = "Pelican Ghut", "pelican   " = "Pelican Ghut", "white" = "White Bay"))
summary(fish_raw$site)
fish_raw$site <- as.character(fish_raw$site)
fish_raw <- fish_raw[fish_raw$site == "Muskmelon" | fish_raw$site == "Pelican Ghut" | fish_raw$site == "Crab Cove" |
fish_raw$site == "Bigelow" | fish_raw$site == "Monkey Pt" | fish_raw$site == "Guana Head" |
fish_raw$site == "White Bay" | fish_raw$site == "Grand Ghut", ]
fish_raw$site <- as.factor(fish_raw$site)
summary(fish_raw$site)
summary(fish_raw$survey)
fish_raw$survey <- as.character(fish_raw$survey)
fish_raw <- fish_raw[fish_raw$survey == "main", ]
fish_raw$survey <- as.factor(fish_raw$survey)
summary(fish_raw$survey)
fish_raw <- fish_raw[which(fish_raw$depth == '30'), ]
summary(fish_raw)
fish_raw_long <- fish_raw %>% gather(key = "KEY", value = "Count", popaa:kysea)
summary(fish_raw_long)
fish_raw_longform <- fish_raw %>% gather(key = "KEY", value = "Count", popaa:kysea)
fish_raw_longform <- fish_raw_longform[!is.na(fish_raw_longform$Count), ]
summary(fish_raw_long)
fish_raw_longform <- na.omit(fish_raw_longform, cols=seq_along(fish_raw_longform$Count))
summary(fish_raw_long)
fish_raw_longform <- na.omit(fish_raw_longform, cols=fish_raw_longform$Count)
summary(fish_raw_long)
fish_raw_longform <- na.omit(fish_raw_longform, cols=Count)
summary(fish_raw_long)
fish_raw_longform <- fish_raw_longform[!is.na(fish_raw_longform$Count),]
summary(fish_raw_longform)
# Import fish datasets (see "Fish Metadata.docx" for more information)
fish_codes <- read.csv("fish species codes 2018.csv", header = T)
fish_list <- read.csv("Fish species list.csv", header = T)
fish_raw <- read.csv("raw fish data nicole 2018.csv", header = T)
# Over the years, people have called sites by different names.
# Correct these entry mistakes by making names consistent
summary(fish_raw$site)
fish_raw$site <- revalue(fish_raw$site, c("bigelow" = "Bigelow", "crab" = "Crab Cove", "grand" = "Grand Ghut",
"iguana" = "Guana Head", "monkey" = "Monkey Pt", "muskN" = "Muskmelon",
"pelican" = "Pelican Ghut", "pelican   " = "Pelican Ghut", "white" = "White Bay"))
# Only retain the 8 main sites:
# Pelican Ghut, Grand Ghut, Crab Cove, Muskmelon, Bigelow, White Bay, Monkey Point, and Guana Head
fish_raw$site <- as.character(fish_raw$site)
fish_raw <- fish_raw[fish_raw$site == "Muskmelon" | fish_raw$site == "Pelican Ghut" | fish_raw$site == "Crab Cove" |
fish_raw$site == "Bigelow" | fish_raw$site == "Monkey Pt" | fish_raw$site == "Guana Head" |
fish_raw$site == "White Bay" | fish_raw$site == "Grand Ghut", ]
fish_raw$site <- as.factor(fish_raw$site)
# Only retain observations where survey==main
fish_raw$survey <- as.character(fish_raw$survey)
fish_raw <- fish_raw[fish_raw$survey == "main", ]
fish_raw$survey <- as.factor(fish_raw$survey)
# Only retain observations where depth==30 (feet)
fish_raw <- fish_raw[which(fish_raw$depth == '30'), ]
# Put fish_raw into long form (i.e. so species codes are in a single column rather than having one column for each species code)
# key = "title of new column", value = "numbers being moved around because of the key",
# ":" specifies which columns should be included in key
fish_raw_longform <- fish_raw %>% gather(key = "KEY", value = "Count", popaa:kysea)
summary(fish_raw_longform$Count)
fish_raw_longform <- fish_raw_longform[!is.na(fish_raw_longform$Count),]
summary(fish_raw_longform$Count)
KEY <- as.character(fish_raw_longform$KEY)
fish_split <- data.frame("Species_Code" = substr(KEY, 1, (nchar(KEY)-1)), "Age_Class" = substr(KEY, nchar(KEY), nchar(KEY)))
fish_raw_longform <- cbind(fish_raw_longform, fish_split)
colnames(fish_codes)[colnames(fish_codes) == "ï..new_code"] <- "KEY"
fish_raw_long_split_codes <- merge(fish_raw_long_split, fish_codes, by = "KEY", all = T)
fish_raw_long_split_codes <- merge(fish_raw_longform, fish_codes, by = "KEY", all = T)
fish_raw_longform <- merge(fish_raw_longform, fish_codes, by = "KEY", all = T)
colnames(fish_list)[colnames(fish_list) == "f_code"] <- "KEY"
## Import fish datasets (see "Fish Metadata.docx" for more information)
fish_codes <- read.csv("fish species codes 2018.csv", header = T)
fish_list <- read.csv("Fish species list.csv", header = T)
fish_raw <- read.csv("raw fish data nicole 2018.csv", header = T)
# Over the years, people have called sites by different names.
# Correct these entry mistakes by making names consistent
summary(fish_raw$site)
fish_raw$site <- revalue(fish_raw$site, c("bigelow" = "Bigelow", "crab" = "Crab Cove", "grand" = "Grand Ghut",
"iguana" = "Guana Head", "monkey" = "Monkey Pt", "muskN" = "Muskmelon",
"pelican" = "Pelican Ghut", "pelican   " = "Pelican Ghut", "white" = "White Bay"))
# Only retain the 8 main sites:
# Pelican Ghut, Grand Ghut, Crab Cove, Muskmelon, Bigelow, White Bay, Monkey Point, and Guana Head
fish_raw$site <- as.character(fish_raw$site)
fish_raw <- fish_raw[fish_raw$site == "Muskmelon" | fish_raw$site == "Pelican Ghut" | fish_raw$site == "Crab Cove" |
fish_raw$site == "Bigelow" | fish_raw$site == "Monkey Pt" | fish_raw$site == "Guana Head" |
fish_raw$site == "White Bay" | fish_raw$site == "Grand Ghut", ]
fish_raw$site <- as.factor(fish_raw$site)
# Only retain observations where survey==main
fish_raw$survey <- as.character(fish_raw$survey)
fish_raw <- fish_raw[fish_raw$survey == "main", ]
fish_raw$survey <- as.factor(fish_raw$survey)
# Only retain observations where depth==30 (feet)
fish_raw <- fish_raw[which(fish_raw$depth == '30'), ]
# Put fish_raw into long form (i.e. so species codes are in a single column rather than having one column for each species code)
# key = "title of new column", value = "numbers being moved around because of the key",
# ":" specifies which columns should be included in key
fish_raw_longform <- fish_raw %>% gather(key = "KEY", value = "Count", popaa:kysea)
# Remove observations where Count is NA
fish_raw_longform <- fish_raw_longform[!is.na(fish_raw_longform$Count),]
# Split new KEY column into species_code and age_class columns
KEY <- as.character(fish_raw_longform$KEY)
fish_split <- data.frame("Species_Code" = substr(KEY, 1, (nchar(KEY)-1)), "Age_Class" = substr(KEY, nchar(KEY), nchar(KEY)))
# Combine long-form dataset with the split columns dataframe
fish_raw_longform <- cbind(fish_raw_longform, fish_split)
# Rename column in fish_codes dataframe to use as a key to merge this information with the raw data
colnames(fish_codes)[colnames(fish_codes) == "ï..new_code"] <- "KEY"
fish_raw_longform <- merge(fish_raw_longform, fish_codes, by = "KEY", all = T)
# Rename column in fish_list dataframe to use as a key to merge this information with the raw data + fish code info
colnames(fish_list)[colnames(fish_list) == "f_code"] <- "KEY"
fish_raw_longform <- merge(fish_raw_longform, fish_list, by = "KEY", all = T)
summary(fish_raw_longform)
## Import fish datasets (see "Fish Metadata.docx" for more information)
fish_codes <- read.csv("fish species codes 2018.csv", header = T)
fish_list <- read.csv("Fish species list.csv", header = T)
fish_raw <- read.csv("raw fish data nicole 2018.csv", header = T)
# Over the years, people have called sites by different names.
# Correct these entry mistakes by making names consistent
summary(fish_raw$site)
fish_raw$site <- revalue(fish_raw$site, c("bigelow" = "Bigelow", "crab" = "Crab Cove", "grand" = "Grand Ghut",
"iguana" = "Guana Head", "monkey" = "Monkey Pt", "muskN" = "Muskmelon",
"pelican" = "Pelican Ghut", "pelican   " = "Pelican Ghut", "white" = "White Bay"))
# Only retain the 8 main sites:
# Pelican Ghut, Grand Ghut, Crab Cove, Muskmelon, Bigelow, White Bay, Monkey Point, and Guana Head
fish_raw$site <- as.character(fish_raw$site)
fish_raw <- fish_raw[fish_raw$site == "Muskmelon" | fish_raw$site == "Pelican Ghut" | fish_raw$site == "Crab Cove" |
fish_raw$site == "Bigelow" | fish_raw$site == "Monkey Pt" | fish_raw$site == "Guana Head" |
fish_raw$site == "White Bay" | fish_raw$site == "Grand Ghut", ]
fish_raw$site <- as.factor(fish_raw$site)
# Only retain observations where survey==main
fish_raw$survey <- as.character(fish_raw$survey)
fish_raw <- fish_raw[fish_raw$survey == "main", ]
fish_raw$survey <- as.factor(fish_raw$survey)
# Only retain observations where depth==30 (feet)
fish_raw <- fish_raw[which(fish_raw$depth == '30'), ]
# Put fish_raw into long form (i.e. so species codes are in a single column rather than having one column for each species code)
# key = "title of new column", value = "numbers being moved around because of the key",
# ":" specifies which columns should be included in key
fish_raw_longform <- fish_raw %>% gather(key = "KEY", value = "Count", popaa:kysea)
# Split new KEY column into species_code and age_class columns
KEY <- as.character(fish_raw_longform$KEY)
fish_split <- data.frame("Species_Code" = substr(KEY, 1, (nchar(KEY)-1)), "Age_Class" = substr(KEY, nchar(KEY), nchar(KEY)))
# Combine long-form dataset with the split columns dataframe
fish_raw_longform <- cbind(fish_raw_longform, fish_split)
# Rename column in fish_codes dataframe to use as a key to merge this information with the raw data
colnames(fish_codes)[colnames(fish_codes) == "ï..new_code"] <- "KEY"
fish_raw_longform <- merge(fish_raw_longform, fish_codes, by = "KEY", all = T)
# Rename column in fish_list dataframe to use as a key to merge this information with the raw data + fish code info
colnames(fish_list)[colnames(fish_list) == "f_code"] <- "KEY"
fish_raw_longform <- merge(fish_raw_longform, fish_list, by = "KEY", all = T)
# Remove observations where Count is NA
fish_raw_longform <- fish_raw_longform[!is.na(fish_raw_longform$Count),]
summary(fish_raw_longform)
## Import coral dataset
## Import sponge dataset
sponge_raw <- read.csv("Guana_Sponge_data_for_analysis.csv", header=T)
# Only select rows and columns for which there are values entered (sponge_raw has extraneous rows and columns)
sponge_raw <- sponge_raw[1:557,1:65]
# Over the years, people have called sites by different names.
# Correct these entry mistakes by making names consistent
summary(sponge_raw$Site)
sponge_raw$Site <- revalue(sponge_raw$Site, c("Long Point" = "Muskmelon", "Pelican" = "Pelican Ghut"))
# Only retain the 8 main sites:
# Pelican Ghut, Grand Ghut, Crab Cove, Muskmelon, Bigelow, White Bay, Monkey Point, and Guana Head
sponge_raw$Site <- as.character(sponge_raw$Site)
sponge_raw <- sponge_raw[sponge_raw$Site == "Muskmelon" | sponge_raw$Site == "Pelican Ghut" | sponge_raw$Site == "Crab Cove" |
sponge_raw$Site == "Bigelow" | sponge_raw$Site == "Monkey Pt" | sponge_raw$Site == "Guana Head" |
sponge_raw$Site == "White Bay" | sponge_raw$Site == "Grand Ghut", ]
sponge_raw$Site <- as.factor(sponge_raw$Site)
# Put datast into long form (i.e. so species codes are in a single column rather than having one column for each species code)
# key = "title of new column", value = "numbers being moved around because of the key",
# ":" specifies which columns should be included in key
sponge_raw_longform <- sponge_raw %>%
gather(key = "Taxonomic_Group", value = "Count", Agelas.clathrodes..Agelas.citrina.or.Clathria.faviformis:Black..spiny..purple.exudate.but.not.slimy)
# Double-check
summary(sponge_raw_longform)
# Taxonomic_Group is being read as a character, but it should be a factor
# overwrite column so it is a factor
sponge_raw_longform$Taxonomic_Group <- as.factor(sponge_raw_longform$Taxonomic_Group)
# Can also make Year a factor instead of an integer
sponge_raw_longform$Year <- as.factor(sponge_raw_longform$Year)
# Summary Information
str(sponge_raw_longform)
summary(sponge_raw_longform)
summary(sponge_raw_longform$Site)
summary(sponge_raw_longform$Year)
## Import fish datasets (see "Fish Metadata.docx" for more information)
fish_codes <- read.csv("fish species codes 2018.csv", header = T)
fish_list <- read.csv("Fish species list.csv", header = T)
fish_raw <- read.csv("raw fish data nicole 2018.csv", header = T)
# Over the years, people have called sites by different names.
# Correct these entry mistakes by making names consistent
summary(fish_raw$site)
fish_raw$site <- revalue(fish_raw$site, c("bigelow" = "Bigelow", "crab" = "Crab Cove", "grand" = "Grand Ghut",
"iguana" = "Guana Head", "monkey" = "Monkey Pt", "muskN" = "Muskmelon",
"pelican" = "Pelican Ghut", "pelican   " = "Pelican Ghut", "white" = "White Bay"))
# Only retain the 8 main sites:
# Pelican Ghut, Grand Ghut, Crab Cove, Muskmelon, Bigelow, White Bay, Monkey Point, and Guana Head
fish_raw$site <- as.character(fish_raw$site)
fish_raw <- fish_raw[fish_raw$site == "Muskmelon" | fish_raw$site == "Pelican Ghut" | fish_raw$site == "Crab Cove" |
fish_raw$site == "Bigelow" | fish_raw$site == "Monkey Pt" | fish_raw$site == "Guana Head" |
fish_raw$site == "White Bay" | fish_raw$site == "Grand Ghut", ]
fish_raw$site <- as.factor(fish_raw$site)
# Only retain observations where survey==main
fish_raw$survey <- as.character(fish_raw$survey)
fish_raw <- fish_raw[fish_raw$survey == "main", ]
fish_raw$survey <- as.factor(fish_raw$survey)
# Only retain observations where depth==30 (feet)
fish_raw <- fish_raw[which(fish_raw$depth == '30'), ]
# Put fish_raw into long form (i.e. so species codes are in a single column rather than having one column for each species code)
# key = "title of new column", value = "numbers being moved around because of the key",
# ":" specifies which columns should be included in key
fish_raw_longform <- fish_raw %>% gather(key = "KEY", value = "Count", popaa:kysea)
# Split new KEY column into species_code and age_class columns
KEY <- as.character(fish_raw_longform$KEY)
fish_split <- data.frame("Species_Code" = substr(KEY, 1, (nchar(KEY)-1)), "Age_Class" = substr(KEY, nchar(KEY), nchar(KEY)))
# Combine long-form dataset with the split columns dataframe
fish_raw_longform <- cbind(fish_raw_longform, fish_split)
# Rename column in fish_codes dataframe to use as a key to merge this information with the raw data
colnames(fish_codes)[colnames(fish_codes) == "ï..new_code"] <- "KEY"
fish_raw_longform <- merge(fish_raw_longform, fish_codes, by = "KEY", all = T)
# Rename column in fish_list dataframe to use as a key to merge this information with the raw data + fish code info
colnames(fish_list)[colnames(fish_list) == "f_code"] <- "KEY"
fish_raw_longform <- merge(fish_raw_longform, fish_list, by = "KEY", all = T)
# Remove observations where Count is NA
fish_raw_longform <- fish_raw_longform[!is.na(fish_raw_longform$Count),]
summary(fish_raw_longform)
subset <- fish_raw_longform[,c("ï..notes", "duration", "year", "month", "day", "site", "transect",
"fixed_transect", "Count", "Species_Code", "Age_Class", "Family.x", "Family.y", "Family2",
"Commonname", "scientific.name", "Trophic.Level", "Max.body.size", "Dietary.group")]
View(subset)
fish_raw_longform_reduced <- fish_raw_longform[,c("ï..notes", "duration", "year", "month", "day", "site", "transect",
"fixed_transect", "Count", "Species_Code", "Age_Class", "Family.x", "Family.y", "Family2",
"Commonname", "scientific.name", "Trophic.Level", "Max.body.size", "Dietary.group")]
str(fish_raw_longform_reduced)
fish_raw_longform_reduced$Year <- as.factor(fish_raw_longform_reduced$Year)
fish_raw_longform_reduced <- fish_raw_longform[,c("ï..notes", "duration", "year", "month", "day", "site", "transect",
"fixed_transect", "Count", "Species_Code", "Age_Class", "Family.x", "Family.y", "Family2",
"Commonname", "scientific.name", "Trophic.Level", "Max.body.size", "Dietary.group")]
fish_raw_longform_reduced$Year <- as.factor(fish_raw_longform_reduced$year)
str(fish_raw_longform_reduced)
fish_raw_longform_reduced$year <- as.factor(fish_raw_longform_reduced$year)
str(fish_raw_longform_reduced)
## Import fish datasets (see "Fish Metadata.docx" for more information)
fish_codes <- read.csv("fish species codes 2018.csv", header = T)
fish_list <- read.csv("Fish species list.csv", header = T)
fish_raw <- read.csv("raw fish data nicole 2018.csv", header = T)
# Over the years, people have called sites by different names.
# Correct these entry mistakes by making names consistent
summary(fish_raw$site)
fish_raw$site <- revalue(fish_raw$site, c("bigelow" = "Bigelow", "crab" = "Crab Cove", "grand" = "Grand Ghut",
"iguana" = "Guana Head", "monkey" = "Monkey Pt", "muskN" = "Muskmelon",
"pelican" = "Pelican Ghut", "pelican   " = "Pelican Ghut", "white" = "White Bay"))
# Only retain the 8 main sites:
# Pelican Ghut, Grand Ghut, Crab Cove, Muskmelon, Bigelow, White Bay, Monkey Point, and Guana Head
fish_raw$site <- as.character(fish_raw$site)
fish_raw <- fish_raw[fish_raw$site == "Muskmelon" | fish_raw$site == "Pelican Ghut" | fish_raw$site == "Crab Cove" |
fish_raw$site == "Bigelow" | fish_raw$site == "Monkey Pt" | fish_raw$site == "Guana Head" |
fish_raw$site == "White Bay" | fish_raw$site == "Grand Ghut", ]
fish_raw$site <- as.factor(fish_raw$site)
# Only retain observations where survey==main
fish_raw$survey <- as.character(fish_raw$survey)
fish_raw <- fish_raw[fish_raw$survey == "main", ]
fish_raw$survey <- as.factor(fish_raw$survey)
# Only retain observations where depth==30 (feet)
fish_raw <- fish_raw[which(fish_raw$depth == '30'), ]
# Put fish_raw into long form (i.e. so species codes are in a single column rather than having one column for each species code)
# key = "title of new column", value = "numbers being moved around because of the key",
# ":" specifies which columns should be included in key
fish_raw_longform <- fish_raw %>% gather(key = "KEY", value = "Count", popaa:kysea)
# Split new KEY column into species_code and age_class columns
KEY <- as.character(fish_raw_longform$KEY)
fish_split <- data.frame("Species_Code" = substr(KEY, 1, (nchar(KEY)-1)), "Age_Class" = substr(KEY, nchar(KEY), nchar(KEY)))
# Combine long-form dataset with the split columns dataframe
fish_raw_longform <- cbind(fish_raw_longform, fish_split)
# Rename column in fish_codes dataframe to use as a key to merge this information with the raw data
colnames(fish_codes)[colnames(fish_codes) == "ï..new_code"] <- "KEY"
fish_raw_longform <- merge(fish_raw_longform, fish_codes, by = "KEY", all = T)
# Rename column in fish_list dataframe to use as a key to merge this information with the raw data + fish code info
colnames(fish_list)[colnames(fish_list) == "f_code"] <- "KEY"
fish_raw_longform <- merge(fish_raw_longform, fish_list, by = "KEY", all = T)
# Remove observations where Count is NA
fish_raw_longform <- fish_raw_longform[!is.na(fish_raw_longform$Count),]
# Keep only the columns that I think might be relevant
fish_raw_longform_reduced <- fish_raw_longform[,c("ï..notes", "duration", "year", "month", "day", "site", "transect",
"fixed_transect", "Count", "Species_Code", "Age_Class", "Family.x", "Family.y", "Family2",
"Commonname", "scientific.name", "Trophic.Level", "Max.body.size", "Dietary.group")]
# Can also make Year a factor instead of an integer
fish_raw_longform_reduced$year <- as.factor(fish_raw_longform_reduced$year)
# Summary Information
str(fish_raw_longform_reduced)
summary(fish_raw_longform_reduced)
summary(fish_raw_longform_reduced$Site)
summary(fish_raw_longform_reduced$site)
summary(fish_raw_longform_reduced$year)
View(fish_raw_longform_reduced)
### Nicole Keefner
### Master's Thesis
## Set Working Directory
## Load packages
library(tidyverse)
library(tidyr)
library(plyr)
library(dplyr)
## Import coral dataset
## Import sponge dataset
sponge_raw <- read.csv("Guana_Sponge_data_for_analysis.csv", header=T)
# Only select rows and columns for which there are values entered (sponge_raw has extraneous rows and columns)
sponge_raw <- sponge_raw[1:557,1:65]
# Over the years, people have called sites by different names.
# Correct these entry mistakes by making names consistent
summary(sponge_raw$Site)
sponge_raw$Site <- revalue(sponge_raw$Site, c("Long Point" = "Muskmelon", "Pelican" = "Pelican Ghut"))
# Only retain the 8 main sites:
# Pelican Ghut, Grand Ghut, Crab Cove, Muskmelon, Bigelow, White Bay, Monkey Point, and Guana Head
sponge_raw$Site <- as.character(sponge_raw$Site)
sponge_raw <- sponge_raw[sponge_raw$Site == "Muskmelon" | sponge_raw$Site == "Pelican Ghut" | sponge_raw$Site == "Crab Cove" |
sponge_raw$Site == "Bigelow" | sponge_raw$Site == "Monkey Pt" | sponge_raw$Site == "Guana Head" |
sponge_raw$Site == "White Bay" | sponge_raw$Site == "Grand Ghut", ]
sponge_raw$Site <- as.factor(sponge_raw$Site)
# Put datast into long form (i.e. so species codes are in a single column rather than having one column for each species code)
# key = "title of new column", value = "numbers being moved around because of the key",
# ":" specifies which columns should be included in key
sponge_raw_longform <- sponge_raw %>%
gather(key = "Taxonomic_Group", value = "Count", Agelas.clathrodes..Agelas.citrina.or.Clathria.faviformis:Black..spiny..purple.exudate.but.not.slimy)
# Double-check
summary(sponge_raw_longform)
# Taxonomic_Group is being read as a character, but it should be a factor
# overwrite column so it is a factor
sponge_raw_longform$Taxonomic_Group <- as.factor(sponge_raw_longform$Taxonomic_Group)
# Can also make Year a factor instead of an integer
sponge_raw_longform$Year <- as.factor(sponge_raw_longform$Year)
# Summary Information
str(sponge_raw_longform)
summary(sponge_raw_longform)
summary(sponge_raw_longform$Site)
summary(sponge_raw_longform$Year)
## Import fish datasets (see "Fish Metadata.docx" for more information)
fish_codes <- read.csv("fish species codes 2018.csv", header = T)
fish_list <- read.csv("Fish species list.csv", header = T)
fish_raw <- read.csv("raw fish data nicole 2018.csv", header = T)
# Over the years, people have called sites by different names.
# Correct these entry mistakes by making names consistent
summary(fish_raw$site)
fish_raw$site <- revalue(fish_raw$site, c("bigelow" = "Bigelow", "crab" = "Crab Cove", "grand" = "Grand Ghut",
"iguana" = "Guana Head", "monkey" = "Monkey Pt", "muskN" = "Muskmelon",
"pelican" = "Pelican Ghut", "pelican   " = "Pelican Ghut", "white" = "White Bay"))
# Only retain the 8 main sites:
# Pelican Ghut, Grand Ghut, Crab Cove, Muskmelon, Bigelow, White Bay, Monkey Point, and Guana Head
fish_raw$site <- as.character(fish_raw$site)
fish_raw <- fish_raw[fish_raw$site == "Muskmelon" | fish_raw$site == "Pelican Ghut" | fish_raw$site == "Crab Cove" |
fish_raw$site == "Bigelow" | fish_raw$site == "Monkey Pt" | fish_raw$site == "Guana Head" |
fish_raw$site == "White Bay" | fish_raw$site == "Grand Ghut", ]
fish_raw$site <- as.factor(fish_raw$site)
# Only retain observations where survey==main
fish_raw$survey <- as.character(fish_raw$survey)
fish_raw <- fish_raw[fish_raw$survey == "main", ]
fish_raw$survey <- as.factor(fish_raw$survey)
# Only retain observations where depth==30 (feet)
fish_raw <- fish_raw[which(fish_raw$depth == '30'), ]
# Put fish_raw into long form (i.e. so species codes are in a single column rather than having one column for each species code)
# key = "title of new column", value = "numbers being moved around because of the key",
# ":" specifies which columns should be included in key
fish_raw_longform <- fish_raw %>% gather(key = "KEY", value = "Count", popaa:kysea)
# Split new KEY column into species_code and age_class columns
KEY <- as.character(fish_raw_longform$KEY)
fish_split <- data.frame("Species_Code" = substr(KEY, 1, (nchar(KEY)-1)), "Age_Class" = substr(KEY, nchar(KEY), nchar(KEY)))
# Combine long-form dataset with the split columns dataframe
fish_raw_longform <- cbind(fish_raw_longform, fish_split)
# Rename column in fish_codes dataframe to use as a key to merge this information with the raw data
colnames(fish_codes)[colnames(fish_codes) == "ï..new_code"] <- "KEY"
fish_raw_longform <- merge(fish_raw_longform, fish_codes, by = "KEY", all = T)
# Rename column in fish_list dataframe to use as a key to merge this information with the raw data + fish code info
colnames(fish_list)[colnames(fish_list) == "f_code"] <- "KEY"
fish_raw_longform <- merge(fish_raw_longform, fish_list, by = "KEY", all = T)
# Remove observations where Count is NA
fish_raw_longform <- fish_raw_longform[!is.na(fish_raw_longform$Count),]
# Keep only the columns that I think might be relevant
fish_raw_longform_reduced <- fish_raw_longform[,c("ï..notes", "duration", "year", "month", "day", "site", "transect",
"fixed_transect", "Count", "Species_Code", "Age_Class", "Family.x", "Family.y", "Family2",
"Commonname", "scientific.name", "Trophic.Level", "Max.body.size", "Dietary.group")]
# Can also make Year a factor instead of an integer
fish_raw_longform_reduced$year <- as.factor(fish_raw_longform_reduced$year)
# Summary Information
str(fish_raw_longform_reduced)
summary(fish_raw_longform_reduced)
summary(fish_raw_longform_reduced$site)
summary(fish_raw_longform_reduced$year)
sponge_raw_longform$Transect.Length..m.
sponge_raw <- sponge_raw[sponge_raw$Transect.Length..m. == 30, ]
str(fish_raw_longform_reduced)
fish_raw_wideform <- spread(fish_raw_longform_reduced, Species_Code, Count)
View(fish_raw_wideform)
summary(fish_raw_wideform)
?spread
fish_raw_wideform <- spread(fish_raw_longform_reduced, Species_Code, Count, drop = F)
View(fish_raw)
fish_raw_longform_minimum <- fish_raw_longform_reduced[,c("ï..notes", "year", "month", "day", "site", "transect",
"fixed_transect", "Count", "Species_Code", "Age_Class")]
View(fish_raw_longform_reduced)
View(fish_raw_longform_reduced)
View(fish_raw_longform_minimum)
fish_raw_wideform <- spread(fish_raw_longform_minimum, Species_Code, Count)
View(fish_raw_wideform)
str(fish_raw)
summary(fish_raw)
summary(fish_raw$site)
summary(fish_raw_wideform$site)
fish_raw_longform_minimum <- fish_raw_longform_reduced[,c("ï..notes", "year", "month", "day", "site", "transect",
"fixed_transect", "Count", "Species_Code")]
fish_raw_wideform <- spread(fish_raw_longform_minimum, Species_Code, Count)
summary(fish_raw_wideform)
test <- expand.grid(fish_raw_wideform$year, fish_raw_wideform$site, KEEP.OUT.ATTRS = TRUE)
View(test)
test2 <- unique(test)
View(test2)
summary(fish_raw_longform_reduced$year)
str(fish_raw_longform_reduced$year)
View(sponge_raw_longform)
sponge_raw_wideform <- spread(sponge_raw_longform, Taxonomic_Group, Count)
sponge_raw_wideform <- spread(sponge_raw_longform, Taxonomic_Group, Count)
View(sponge_raw_longform)
str(sponge_raw_longform)
View(fish_raw_wideform)
View(sponge_raw_longform)
View(sponge_raw)
check1 <- unique(expand.grid(sponge_raw_longform$Year, sponge_raw_longform$Site, KEEP.OUT.ATTRS = TRUE))
Import sponge dataset
sponge_raw <- read.csv("Guana_Sponge_data_for_analysis.csv", header=T)
# Only select rows and columns for which there are values entered (sponge_raw has extraneous rows and columns)
sponge_raw <- sponge_raw[1:557,1:65]
# Over the years, people have called sites by different names.
# Correct these entry mistakes by making names consistent
summary(sponge_raw$Site)
sponge_raw$Site <- revalue(sponge_raw$Site, c("Long Point" = "Muskmelon", "Pelican" = "Pelican Ghut"))
# Only retain the 8 main sites:
# Pelican Ghut, Grand Ghut, Crab Cove, Muskmelon, Bigelow, White Bay, Monkey Point, and Guana Head
sponge_raw$Site <- as.character(sponge_raw$Site)
sponge_raw <- sponge_raw[sponge_raw$Site == "Muskmelon" | sponge_raw$Site == "Pelican Ghut" | sponge_raw$Site == "Crab Cove" |
sponge_raw$Site == "Bigelow" | sponge_raw$Site == "Monkey Pt" | sponge_raw$Site == "Guana Head" |
sponge_raw$Site == "White Bay" | sponge_raw$Site == "Grand Ghut", ]
sponge_raw$Site <- as.factor(sponge_raw$Site)
# Put datast into long form (i.e. so species codes are in a single column rather than having one column for each species code)
# key = "title of new column", value = "numbers being moved around because of the key",
# ":" specifies which columns should be included in key
sponge_raw_longform <- sponge_raw %>%
gather(key = "Taxonomic_Group", value = "Count", Agelas.clathrodes..Agelas.citrina.or.Clathria.faviformis:Black..spiny..purple.exudate.but.not.slimy)
# Double-check
summary(sponge_raw_longform)
# Taxonomic_Group is being read as a character, but it should be a factor
# overwrite column so it is a factor
sponge_raw_longform$Taxonomic_Group <- as.factor(sponge_raw_longform$Taxonomic_Group)
# Can also make Year a factor instead of an integer
sponge_raw_longform$Year <- as.factor(sponge_raw_longform$Year)
# Summary Information
str(sponge_raw_longform)
summary(sponge_raw_longform)
summary(sponge_raw_longform$Site)
summary(sponge_raw_longform$Year)
# Convert to wide form
sponge_raw_wideform <- spread(sponge_raw_longform, Taxonomic_Group, Count)
# Check that observations were made at every site for every year
check1 <- unique(expand.grid(sponge_raw_longform$Year, sponge_raw_longform$Site, KEEP.OUT.ATTRS = TRUE))
check1 <- expand.grid(sponge_raw_longform$Year, sponge_raw_longform$Site, KEEP.OUT.ATTRS = TRUE)
